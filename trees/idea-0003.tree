\title{nix in-repl editor}
\date{2024-03-22}
\tag{nix}
\tag{cli}
\author{jinser}

\p{nix repl 和其他的 repl 一样，都会遇到一个问题：编辑跨行的代码的时候非常困难，我遇到的解决方案大概有这几种。}
\ol{
  \li{自动检查多行环境。比如 racket 的 repl 会在按下回车键后，检查括号是否全部匹配，如果还有未匹配的括号，那么他会认为你还没有写完，回车键就会被处理为换行，而不是确认求值；类似的还有 psql，会检查输入语句的末尾是否有分号 \code{;}。这种方式适合容易判断是否截止的语言。}
  \li{手动标记多行环境。典型的如 ghci，可以使用 \code{\startverb :{ ... :} \stopverb} 来手动标记多行环境。}
  \li{打开一个临时编辑器。一般是使用当前 shell 中的 \code{$EDITOR} 打开一个临时文件，在成功退出编辑器后（即 \code{status = 0}），将临时文件中的代码复制到当前 repl 中。这样的好处是，编辑器是更适合多行编辑的工具，且能够利用编辑器的高亮，甚至是 LSP 等检查工具。psql 的这个功能就很好用，通过输入 \code{\startverb \e \stopverb} 指令来打开编辑器。顺便一提，在 shell （至少 fish）中，按 \code{M-e} 也可以原地打开编辑器进行编辑操作。}
}

\p{据我自己所知道的，还没有找到 nix repl 有类似的能力。还没有寻找 issue 或 pr，也许已有人提过。}

\p{最好能支持和 psql 一样的 \code{\startverb \e \stopverb} 指令，但是 nix repl 的 \code{\startverb :e \stopverb} 已经是 \code{Open package or function in $EDITOR} 的意思了。}
\p{不知道 nix repl 是用什么语言实现的，要是有机会能提个 pr 就好了。}

